<%# @order = Order.find(params[:id]) %>
<%# @order_items = @order.order_items %>

<%= simple_form_for [:admin,@order] do |f| %>

<table style="color:#696969;">
  <tr>
    <th>Product Code</th>
    <th>Description</th>
    <th>Unit Price</th>
    <th>Quantity</th>
    <th>Pack Size</th>
    <th>Total Price</th>
  </tr>
  <% p_code_counter = -1 %>
  <% p_desc_counter = -1 %>
  <% p_price_counter = -1 %>
  <% p_packsize_counter = -1 %>
  <% p_total_price_counter = -1 %>
  <% p_quantity_counter = -1 %>
  <%= f.simple_fields_for :order_items do |oi| %>

    <!-- <td><%#= object.product.product_code %></td> -->

<tr>
  <td><%= oi.input :product_id, label: false, as: :select, collection: Product.all.collect { |p| [p.product_code,p.id,class: "product_code-#{p.id}"]},
                    input_html: { class: " chosen-select product_code product_code-#{p_code_counter+=1}"} %></td>
  <td><%= oi.input :product_id, label: false, as: :select, collection: Product.all.collect { |p| [p.description,p.id]},
                    input_html: { class: "product_description product_description-#{p_desc_counter+=1}", disabled: true} %></td>
  <td><%= oi.input :product_id, label: false, as: :select, collection: Product.all.collect { |p| [p.price,p.id]},
                    input_html: { class: "product_price product_price-#{p_price_counter+=1}", disabled: true} %></td>
  <td><%= oi.input :quantity, label: false, input_html: {class: "quantity-#{p_quantity_counter+=1}"} %></td>
  <td><%= oi.input :product_id, label: false, as: :select, collection: Product.all.collect { |p| [p.pack_size,p.id]},
                    input_html: { class: "product_packsize product_packsize-#{p_packsize_counter+=1}", disabled: true} %></td>
  <td class="total-price total-price-<%=p_total_price_counter+=1%>"><%#= number_to_currency oi.object.product.price * oi.object.quantity.to_i %></td>
</tr>

    <!-- <td><%#= oi.object.product.description %></td> -->
    <!-- <td><%#= number_to_currency oi.object.product.price %></td> -->
    <!-- <td><%#= oi.object.product.pack_size %></td> -->
    <!-- <td><%#= number_to_currency oi.object.product.price * oi.object.quantity.to_i %></td> -->
  <% end %>
  <tr>
    <td colspan="5" style="text-align:right;"><b>Your Order Total:</b></td>
    <td colspan="6" class="order-total"><b> <%=number_to_currency @order.calculate_total %></b></td>
  </tr>
</table>
<% end %>

<script>
  window.onload = function() {
    $('.product_code').each(function(index){
      $('.product_code-'+index).change(function(){
        console.log("just changed-"+index)
        // $('.product_code').change(function(){
        var newValue = $(this).val();
        // $('.product_description-' + newValue).val(newValue);
        // $('.product_description option[class="product_description-' + newValue +'"]').val(newValue);
        // var getIndex = $('.product_description').index();

        //seize the below code as this has been replaced with one line alternative
          // var getProductDescClass = $('.product_description option[class="product_desc-' + newValue +'"]').attr("class")
          // $('.product_description-'+index).addClass(getProductDescClass);
          // $('.product_desc-'+newValue).val(newValue);
        var updateProductDescription = $('.product_description-'+index).val(newValue).val();

        // $('.product_description').val(dynamicVal);
        var updatePrice = $('.product_price-'+index).val(newValue).val();
        // var price = $('.product_price').val(newValue).val();
        console.log(updatePrice);
        var newPrice = updatePrice.toString();
        var priceVal = $('.product_price-'+index).find('option[value="' + newPrice +'"]').text();
        // var priceVal = $('.product_price option[value="' + newPrice +'"]').text();
        console.log(priceVal);
        $('.product_packsize-'+index).val(newValue);
        // When clicking anywhere on the document, it should automatically update the total price value if quantity is given
        $(document).click(function(){
          var quantity = $('.quantity-'+index).val();
          $('.total-price-'+index).text("£ " + parseFloat(priceVal) * parseFloat(quantity));
          if ($('.total-price-'+index).text() == "£ NaN") {
            $('.total-price-'+index).text("£ 0.00")
          }
          calculateGrandTotal();
        });
        // Calculate Grand Total Price //
        function calculateGrandTotal() {
          var priceArray = []
          var sumOfPrices = 0 // Not sure if this is being used, investigate later
          $('.total-price').each(function(index){
            var totalPrice = $(this).text().split('£ ').filter(item => item).toString();
            priceArray.push(totalPrice);
           })
          convertStringPrices = priceArray.map(Number);
          var grandTotal = convertStringPrices.reduce(function(a,b){ return a+b },0)
          console.log(grandTotal);
          $('.order-total').text("£" + grandTotal);
        }
      });
    });
  }
</script>

<style>

.product_description, .product_price, .product_packsize {
  -webkit-appearance: none;
  border:none;
  /*background-color:#DDDDD9;*/
}
/*.product_description-1, .product_price-1, .product_packsize-1 {background-color:#F1F1F1;}
.product_description-3, .product_price-3, .product_packsize-3 {background-color:#F1F1F1;}
.product_description-6, .product_price-6, .product_packsize-6 {background-color:#F1F1F1;}
.product_description-9, .product_price-9, .product_packsize-9 {background-color:#F1F1F1;}
*/
table {
    border-collapse: collapse;
    width: 100%;
}

td, th {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
}

/*tr:nth-child(even) {
    background-color: #dddddd;
    background-color: #dddddd;
}*/
</style>
